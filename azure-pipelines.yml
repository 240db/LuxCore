# Azure build pipeline script
# Add steps that build, run tests, deploy, and more: https://aka.ms/yaml

resources:
  containers:
  - container: LinuxContainer
    image: ubuntu:14.04

variables:
- group: BuildPipelinesGroup

trigger:
  branches:
    include: ['*']
  tags:
    exclude:
    - luxcorerender_v*

jobs:
- job: LuxCoreRenderLinux
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'

  container: LinuxContainer

  steps:
  - script: ./scripts/azurepipeline/linux/build.sh
    displayName: Building LuxCore
  #- script: ./scripts/azurepipeline/linux/test.sh
  #  displayName: Testing LuxCore
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/LinuxCompile/target-64-sse2/luxcorerender-latest-linux64.tar.bz2'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-latest-linux64.tar.bz2'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/LinuxCompile/target-64-sse2/luxcorerender-latest-linux64-opencl.tar.bz2'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-latest-linux64-opencl.tar.bz2'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')

- job: LuxCoreRenderWindows
  timeoutInMinutes: 0
  pool:
    vmImage: 'vs2017-win2016'

  # container: WindowsContainer

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      addToPath: true
      architecture: 'x64'
  - script: ./scripts/azurepipeline/windows/deps-setup.cmd
    displayName: Getting required deps
  - script: './scripts/azurepipeline/windows/build.cmd /cmake-only /no-ocl'
    displayName: Generating build files with CMake - OpenCL disabled
  - task: MSBuild@1
    inputs:
      solution: '..\WindowsCompile\Build_CMake\LuxCore\LuxRays.sln'
      msbuildVersion: '15.0'
      msbuildArchitecture: 'x64'
      platform: 'x64'
      configuration: 'Release'
      msbuildArguments: '/nologo /verbosity:normal /p:WarningLevel=0'
      # maximumCpuCount --> false to build solution 1 project at a time
      # Avoids "Error C1002: compiler out of heap space in pass 2"
      maximumCpuCount: false
      createLogFile: true
    displayName: Building LuxCore - OpenCL disabled
  - script: './scripts/azurepipeline/windows/post-build.cmd /no-ocl'
    displayName: Gathering and packing binaries - OpenCL disabled
  # - script: './scripts/azurepipeline/windows/build.cmd /cmake-only'
    # displayName: Generating build files with CMake - OpenCL enabled
  # - task: MSBuild@1
    # inputs:
      # solution: '..\WindowsCompile\Build_CMake\LuxCore\LuxRays.sln'
      # msbuildVersion: '15.0'
      # msbuildArchitecture: 'x64'
      # platform: 'x64'
      # configuration: 'Release'
      # msbuildArguments: '/nologo /verbosity:normal /p:WarningLevel=0'
      # # maximumCpuCount --> false to build solution 1 project at a time
      # # Avoids "Error C1002: compiler out of heap space in pass 2"
      # maximumCpuCount: false
      # createLogFile: true
    # displayName: Building LuxCore - OpenCL enabled
  # - script: './scripts/azurepipeline/windows/post-build.cmd'
    # displayName: Gathering and packing binaries - OpenCL enabled
  # - script: './scripts/azurepipeline/windows/test.cmd $(version_string)'
    # displayName: Testing LuxCore
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)\..\WindowsCompile\luxcorerender-latest-win64.zip'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-latest-win64.zip'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)\..\WindowsCompile\luxcorerender-latest-win64-opencl.zip'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-latest-win64-opencl.zip'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')

#- job: LuxCoreRenderMacOS
#  timeoutInMinutes: 0
#  pool:
#    vmImage: 'macOS-10.13'
#
#  steps:
#  - script: ./scripts/azurepipeline/macos/install.sh
#    displayName: Install Build Tools
#  - script: ./scripts/azurepipeline/macos/build.sh
#    displayName: Building LuxCore
#  - script: ./scripts/azurepipeline/macos/test.sh
#    displayName: Testing LuxCore


# Next job deletes "latest" tag from LuxCore repo, so that it is then
# recreated at the current commit by the following release pipeline
# Runs only if at least one of the build jobs was successful
- job: DeleteLatestTag
  dependsOn: 
  - LuxCoreRenderLinux
  - LuxCoreRenderWindows
  # - LuxCoreRenderMacOS
  condition: |
    or
    (
      in(dependencies.LuxCoreRenderLinux.result, 'Succeeded', 'SucceededWithIssues'),
      in(dependencies.LuxCoreRenderWindows.result, 'Succeeded', 'SucceededWithIssues')
    )
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'
    
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: LuxCore_id_rsa
  - task: InstallSSHKey@0
    inputs:
      hostName: github.com,140.82.118.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      sshPublicKey: $(PubKey)
      sshKeySecureFile: $(Agent.TempDirectory)/LuxCore_id_rsa
  - script: ./scripts/azurepipeline/delete-latest-tag.sh
    displayName: Detecting release type (alpha, beta or final)

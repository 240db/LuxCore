# Azure build pipeline script for official releases (alpha/beta and final)
# This pipeline is triggered by a commit tag in the form "luxcorerender_v*"
# The "version_string" after the "_" in the tag is used in following steps
# to generate binary names like "luxcorerender-<version_string>-<platform>-..."
# One, and only one, tag in the form "luxcorerender_v*" is needed, 
# otherwise the official release build aborts.

resources:
  containers:
  - container: LinuxContainer
    image: ubuntu:14.04

trigger:
  tags:
    include:
    - luxcorerender_v*

# Prevent this pipeline to process Pull Request validations, as they are 
# already processed by the CI pipeline (azure-pipelines.yml)
pr: none

variables:
  release_build: 'TRUE'

jobs:
- job: DetectBuildType
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'
    
  steps:
  - script: ./scripts/azurepipeline/detect-build-type.sh
    displayName: Detecting release type (alpha, beta or final)
    
    
- job: LuxCoreRenderLinux
  dependsOn: DetectBuildType
  condition: succeeded()
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'

  container: LinuxContainer

  steps:
  - script: ./scripts/azurepipeline/linux/build.sh
    displayName: Building LuxCore
  - script: ./scripts/azurepipeline/linux/test.sh
    displayName: Testing LuxCore
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-<version>-linux64.tar.bz2'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')

- job: LuxCoreRenderWindows
  dependsOn: DetectBuildType
  condition: succeeded()
  timeoutInMinutes: 0
  pool:
    vmImage: 'vs2017-win2016'

  # container: WindowsContainer

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      addToPath: true
      architecture: 'x64'
  - script: ./scripts/azurepipeline/windows/deps-setup.cmd
    displayName: Getting required deps
  - script: './scripts/azurepipeline/windows/build.cmd /cmake-only /no-ocl'
    displayName: Generating build files with CMake - OpenCL disabled
  - task: MSBuild@1
    inputs:
      solution: '..\WindowsCompile\Build_CMake\LuxCore\LuxRays.sln'
      msbuildVersion: '15.0'
      msbuildArchitecture: 'x64'
      platform: 'x64'
      configuration: 'Release'
      msbuildArguments: '/nologo /verbosity:normal /p:WarningLevel=0'
      # maximumCpuCount --> false to build solution 1 project at a time
      # Avoids "Error C1002: compiler out of heap space in pass 2"
      maximumCpuCount: false
      createLogFile: true
    displayName: Building LuxCore - OpenCL disabled
  - script: './scripts/azurepipeline/windows/post-build.cmd /no-ocl'
    displayName: Gathering and packing binaries - OpenCL disabled
  - script: './scripts/azurepipeline/windows/build.cmd /cmake-only'
    displayName: Generating build files with CMake - OpenCL enabled
  - task: MSBuild@1
    inputs:
      solution: '..\WindowsCompile\Build_CMake\LuxCore\LuxRays.sln'
      msbuildVersion: '15.0'
      msbuildArchitecture: 'x64'
      platform: 'x64'
      configuration: 'Release'
      msbuildArguments: '/nologo /verbosity:normal /p:WarningLevel=0'
      # maximumCpuCount --> false to build solution 1 project at a time
      # Avoids "Error C1002: compiler out of heap space in pass 2"
      maximumCpuCount: false
      createLogFile: true
    displayName: Building LuxCore - OpenCL enabled
  - script: './scripts/azurepipeline/windows/post-build.cmd'
    displayName: Gathering and packing binaries - OpenCL enabled
  - script: './scripts/azurepipeline/windows/test.cmd $(version_string)'
    displayName: Testing LuxCore
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: LuxCore
    displayName: 'Upload luxcorerender-<version>-win64.zip'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')

#- job: LuxCoreRenderMacOS
#  timeoutInMinutes: 0
#  pool:
#    vmImage: 'macOS-10.13'
#
#  steps:
#  - script: ./scripts/azurepipeline/macos/install.sh
#    displayName: Install Build Tools
#  - script: ./scripts/azurepipeline/macos/build.sh
#    displayName: Building LuxCore
#  - script: ./scripts/azurepipeline/macos/test.sh
#    displayName: Testing LuxCore

### New Features

* PhotonGI cache
* Added ALBEDO AOV
* Added to BiDir the support for shading normal, geometry normal, position, material ID, UV, object ID, material ID color and Albedo AOVs
* Added AVG_SHADING_NORMAL AOV
* Integrated Intel Open Image Denoiser (Oidn)

''Alpha0 released''

* Added a new way to blend brute force path tracing and cache in PhotonGI. Cache is now used more often on glossy surfaces
* Introduced a new PhotonGI debug mode to show the mix between brute force and cached paths
* Added the support for automatic PhotonGI indirect cache best radius estimation
* Added the support for automatic PhotonGI indirect cache size by using convergence error estimation
* Front and back material transparency (aka light invisible object)
* Added PhotonGI support for volumes cache entries
* LXS parser now supports instance definitions
* Added the support for new "directx2opengl_normalmap" image map channel selection
* Added new textures: Power, Less Than, Greater Than, Dot Product, Position, Shading Normal

''Alpha1 released''

* Saving/resuming the rendering now includes all PhotonGI cache information and entries
* Added the support for new shape "group"
* Added the support for nested groups to LXS parser
* Added the support for persistent PhotonGI cache on file
* Added the support for using persistent PhotonGI cache across multiple frames for fly-through animations
* DLSC now automatically estimated the best radius if lightstrategy.entry.radius is set to 0.0
* New improved Random/Sobol sampler adaptive code
* LXS parser now supports halttime and haltspp film halt conditions
* LXS parser now supports volumes
* Shadow catcher is now easier to use with multiple light sources of any type

''Beta1 released''

* Added the support for tiled denoising to save a huge amount of ram
* Added the support for new visual map cache for infinitelight, constantinfinite and sky2 light sources
* Added the support for new Disney BRDF material from Siggraph 2012 paper
* Upgraded Intel Oidn to v0.9.0
* Metal material uses a more accurate Albedo value (for Intel OIDN)
* Added "rounding" texture
* Added "modulo" texture
* Improved tiling feature of OIDN imagepipeline plugin
* Fix a bug in ToProperties code of "blender blend" texture when "halo" progression type was used

''Beta2 released''

* Added the support for periodic PhotonGI caustic cache update (aka SPPM without radius reduction)
* PathTracer class now support eye and light path tracing. LIGHTCPU now uses PathTracer class too.
* Added Hybrid Back/Forward path tracing support
* Added the support for glossy caustics rendering to Hybrid Back/Forward

### Fixed Bugs

* Fixed rendering resume feature

''Alpha0 released''

* Fixed a problem with infinite lights and BiDir or PhotonGI
* Fixed a bug when using radiance groups with variance clamping and OpenCL
* Fixed camera invisible objects usage with volumes
* Fixed TASK_EMIT of LightStrategyPower
* Fixed a crash when using RTPATHOCL and editing area lights (issue #173)
* Fixed a bug when using radiance groups with variance clamping and OpenCL

''Alpha1 released''

* Fixed a crash when using negative material emission values (issue #177)
* Fixed LXS parsing in pyluxcoretools
* Fixed a problem when mixing transparent and solid materials with Mix (issue #183)
* Fix a bug when using glossy coating with any specular material
* Fixed LXS parsing of point light source position
* Fixed object ID not being saved by FILESAVER engine
* Fixed a major bug in carpaint material (issue #186)
* Fixed spelling mistake in cloth material "wool gabardine" preset
* Fixed Scene::RemoveUnusedMeshes()
* Fixed a bug in Mix material when working with specular materials (issue #187)
* Fixed an overflow problem when using an heterogenous volume on very large segments
* Sun relative size has now a lower bound of 1.0 to avoid numerical precision problems
* Fixed a problem with Scene::ToProperties() after editing a scene
* Fixed a self-shadow problem with area light sources

''Beta1 released''

* Fix ToProperties() of mapspherelight and spherelight
* Fixed a problem with caustic cache size when both PhotonGI caches were
  enabled and automatic stop condition for indirect cache was used
* PhotonGI Metropolis will now focus on caustic cache when indirect is done (and vice versa)
* Fixed the access to an uninitialized variable when using PhotonGI caustic cache alone
* Fixed the access to an uninitialized variable in ProjectionLight::Preprocess()
* Fixed a crash when trying to render a scene without light sources with PATHOCL (issue #202)
* Fixed DLSC to work with Front and back material transparency (aka light invisible object)
* Fixed a problem in BIDIRCPU with camera PDF
* Fixed a bug in Mix material transparency support (issue #210)
* Added a workaround to an AMD OpenCL compiler bug in DirectLight_BSDFSampling()

''Beta2 released''

* Fixed a problem in the random number generator of PhotonGI
* Fixed wrong theta being saved in ToProperties() of distant light
* Fixed a compilation error in RoughMatte OpenCL code (issue #218)
* Fixed a problem with Disney material specular tint
* Fixed a TILEPATH bug causing black renderings

Check https://wiki.luxcorerender.org/LuxCoreRender_Release_Notes for the full list
of release notes.

**Note for Windows users:** you have to install the [Microsoft Visual C++ Redistributable
for Visual Studio 2017](https://aka.ms/vs/15/release/vc_redist.x64.exe).

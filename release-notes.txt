### Release v2.4

### New Features

* New OpenCL code to evaluate textures and materials. It doesn't require kernel re-compilation anymore.
* LuxCoreUI "Fill kernel cache" menu option now pre-compile all possible GPU kernels.
* LuxCore API KernelCacheFill() is now available for Python
* New 2-levels Env. Light Visibility Cache (ELVC)
* Added the support for a new ".sharpness" (default value 0.1, range [0.0, 1.0]) Intel OIDN parameter to blend original and denoised output
* Removed LuxRays support for virtual devices and hybrid rendering (old LuxRender GPU doing ray intersections and CPU everything else)
* Geometry vertex and triangle AOV (arbitrary data associated to mesh vertices and triangle usable by textures)
* Removed the support for Triplanar texture .uvindex (side effect of the above new feature)
* New hitpointvertexaov nad hitpointtriangleaov textures
* Pointiness shape can now assign curvature values to vertex AOV with .aovindex property (a 4294967296 value will force the use of alpha channel instead, defualt value for compatibility with the past)
* LuxCore API has now SetMeshVertexAOV() and SetMeshTriangleAOV() methods to set geometry vertex and triangle AOV
* Added the support for new Random texture
* Added the support for the new IslandAOV shape
* Added the support for RandomTriangleAOV shape
* Accelerated duplicate vertex detection in pointiness shape (from 6.7 seconds to 0.016 seconds on a 100k vertex mesh)
* LuxRays API reworked to support generic hardware devices (now OpenCL, potentially CUDA, Vulkan, Metal, etc.)

### Fixed Bugs

* Fixed a rendering difference when using/not using geometry negative scale transformations (issue #309)
* Fixed an out of bound access in BAKECPU
* Fixed a problem when using path.forceblackbackground.enable and env. lights
* Fixed a problem with scenes with very hard light paths and Metropolis sampler (issue #312)

Check https://wiki.luxcorerender.org/LuxCoreRender_Release_Notes for the full list
of release notes.

### Known Problems and limitations

* LuxCore API requires latin locale
* accelerator.bvh.builder.type = EMBREE_MORTON doesn't work with the latest Embree
* Python crashes when calling sys.exit()
* TILEPATHOCL (and RTPATHOCL) count the layers of transparent surfaces as an iteration of the rendering finite state machine so they require to increase the max. path depth to avoid black regions.
* Light emitted by motion blurred triangle lights is approximated using the triangle area of time 0.0 (computing triangle area at runtime would be expansive) so it may be not totally accurate if the motion blur transformation include a scale.
* Variance clamping is not applied to AOVs

**Note for Windows users:** you have to install the [Microsoft Visual C++ Redistributable
for Visual Studio 2017](https://aka.ms/vs/15/release/vc_redist.x64.exe) and
[Intel C++ redistributable](https://software.intel.com/sites/default/files/managed/59/aa/ww_icl_redist_msi_2018.3.210.zip).
